{"version":3,"sources":["components/Header/cover.png","reducers.js","components/Header/Header.js","components/ItemType/ItemType.js","components/Unit/Unit.js","components/Liquid/Liquid.js","components/Solid/Solid.js","components/Item/Item.js","components/ItemList/ItemList.js","App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["module","exports","initialItemType","itemType","initialLiquidType","liquidType","initialLiquidConversion","numOz","initialSolidType","solidType","initialSolidConversion","numGrams","Header","className","class","src","cover","ItemType","itemTypeChange","clearFields","clearList","liquidStyle","solidStyle","unitStyle","backgroundColor","type","onClick","style","Unit","itemList","addToArray","unitConversion","base","id","placeholder","aria-label","aria-describedby","document","getElementById","value","console","log","Liquid","setLiquidType","liquidConversionChange","data-toggle","aria-haspopup","aria-expanded","Solid","setSolidType","solidConversionChange","Item","position","name","unitPrice","unitBase","deleteItem","nameCopy","length","substring","unitPriceCopy","toFixed","ItemList","map","item","i","key","App","state","priceReal","parseFloat","quantityReal","price","quantity","itemListCopy","this","push","sort","a","b","setState","innerHTML","splice","props","liquidTypeChange","solidTypeChange","inputForm","bind","Component","connect","updateItemType","updateLiquidType","updateLiquidConversion","updateSolidType","updateSolidConversion","dispatch","payload","setItemTypeSelected","liquidConversion","setLiquidConversion","solidConversion","setSolidConversion","Boolean","window","location","hostname","match","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.812a5b10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.b0b04b11.png\";","import { \n\tCHANGE_ITEM_TYPE, \n\tCHANGE_LIQUID_UNIT,\n\tCHANGE_LIQUID_CONVERSION, \n\tCHANGE_SOLID_UNIT,\n\tCHANGE_SOLID_CONVERSION, \n} from './constants'\n\nconst initialItemType  = {\n\titemType: 'unit'\n}\n\nconst initialLiquidType = {\n\tliquidType: 'Unit'\n}\n\nconst initialLiquidConversion = {\n\tnumOz: 0\n}\n\nconst initialSolidType = {\n\tsolidType: 'Unit'\n}\n\nconst initialSolidConversion = {\n\tnumGrams: 0\n}\n\nexport const updateItemType = (state=initialItemType, action={}) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_ITEM_TYPE:\n\t\t\treturn Object.assign({}, state, { itemType: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateLiquidType =(state=initialLiquidType, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_LIQUID_UNIT: \n\t\t\treturn Object.assign({}, state, { liquidType: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateLiquidConversion = (state=initialLiquidConversion, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_LIQUID_CONVERSION: \n\t\t\treturn Object.assign({}, state, { numOz: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateSolidType =(state=initialSolidType, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SOLID_UNIT: \n\t\t\treturn Object.assign({}, state, { solidType: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateSolidConversion = (state=initialSolidConversion, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SOLID_CONVERSION: \n\t\t\treturn Object.assign({}, state, { numGrams: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}","import React from 'react';\nimport cover from './cover.png'\nconst Header = () => {\n\treturn (\n\t\t<div className='header pt1'>\n\t\t\t<img class=\"fit\" src={cover} />\n\t\t</div>\n\t)\n}\n\nexport default Header;","import React from 'react';\n\nconst ItemType = ({ itemTypeChange, itemType, clearFields, clearList }) => {\n\tvar liquidStyle = {}\n\tvar solidStyle = {}\n\tvar unitStyle = {}\n\tif (itemType === 'liquid') {\n\t\tliquidStyle = {\n\t\t\tbackgroundColor: '#B8B8B8',\n\t\t}\n\t} else {\n\t\tliquidStyle = {}\n\t}\n\tif (itemType === 'solid') {\n\t\tsolidStyle = {\n\t\t\tbackgroundColor: '#B8B8B8'\n\t\t}\n\t} else {\n\t\tsolidStyle = {}\n\t}\n\tif (itemType === 'unit') {\n\t\tunitStyle = {\n\t\t\tbackgroundColor: '#B8B8B8'\n\t\t}\n\t} else {\n\t\tunitStyle = {}\n\t}\n\treturn (\n\t\t<div className='tc'>\n\t\t\t<button type=\"button\" className=\"btn button\" onClick={() => {itemTypeChange('liquid'); clearFields(); clearList();}} style={liquidStyle}>Liquid</button>\n\t\t\t<button type=\"button\" className=\"btn button\" onClick={() => {itemTypeChange('solid'); clearFields(); clearList();}} style={solidStyle}>Solid</button>\n\t\t\t<button type=\"button\" className=\"btn button\" onClick={() => {itemTypeChange('unit'); clearFields(); clearList();}} style={unitStyle}>Unit</button>\n\t\t</div>\n\t)\n}\n\nexport default ItemType","import React from 'react';\n\nconst clearUnitFields = () => {\n\tdocument.getElementById('name').value = ''\n    document.getElementById('price').value = ''\n    document.getElementById('quantity').value = ''\n    console.log('clear unit')\n}\n\nconst Unit = ({ itemList, addToArray, itemType, unitConversion, base, clearFields }) => {\n\treturn (\n\t\t<div class=\"input-group mb-3 mv3 ml2\">\n  \t\t\t<input type=\"text\" class=\"form-control\" id='name' placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='price' placeholder=\"Price\" aria-label=\"Price\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='quantity' placeholder=\"Count\" aria-label=\"Quantity\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<button type=\"button\" class=\"btn formButton\" onClick={() => {addToArray(unitConversion, itemType, base); clearUnitFields()}}>Add</button>\n\t\t</div>\n\t)\n}\n\nexport default Unit;","import React from 'react';\n\nconst clearLiquidFields = () => {\n\tdocument.getElementById('name').value = ''\n    document.getElementById('price').value = ''\n    document.getElementById('quantity').value = ''\n    console.log('clear liquid')\n}\n\nconst Liquid = ({ setLiquidType, liquidType, liquidConversionChange, itemList, addToArray, itemType, unitConversion, base, clearFields }) => {\n\n\treturn (\n\t\t<div class=\"input-group mb-3 mv3 ml2\">\n  \t\t\t<input type=\"text\" class=\"form-control\" id='name' placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='price' placeholder=\"Price\" aria-label=\"Price\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='quantity'placeholder=\"Count\" aria-label=\"Quantity\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<button className=\"btn dropdown-toggle formButton\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t    \t\t{liquidType}\n\t  \t\t</button>\n  \t\t\t<div className=\"dropdown-menu scrollable-menu down\">\n\t  \t\t\t<ul>\n\t\t  \t\t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Gallon'); liquidConversionChange(128.0)}}>Gallon</li>\n\t\t    \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Liter'); liquidConversionChange(33.814)}}>Liter</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Quart'); liquidConversionChange(32.0)}}>Quart</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Pint'); liquidConversionChange(16.0)}}>Pint</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Cup'); liquidConversionChange(8.0)}}>Cup</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Oz'); liquidConversionChange(1.0)}}>Oz</li>\n\t\t\t  \t</ul>\n\t  \t\t</div>\n  \t\t\t<button type=\"button\" class=\"btn formButton\" onClick={() => {addToArray(unitConversion, itemType, base); clearLiquidFields()}}>Add</button>\n\n\t\t</div>\n\t)\n}\n\nexport default Liquid;","import React from 'react'\n\nconst clearSolidFields = () => {\n\tdocument.getElementById('name').value = ''\n    document.getElementById('price').value = ''\n    document.getElementById('quantity').value = ''\n    console.log('clear liquid')\n}\n\nconst Solid = ({ setSolidType, solidType, solidConversionChange, itemList, addToArray, itemType, unitConversion, base, clearFields }) => {\n\n\treturn (\n\t\t<div class=\"input-group mb-3 mv3 ml2\">\n  \t\t\t<input type=\"text\" class=\"form-control\" id='name' placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='price' placeholder=\"Price\" aria-label=\"Price\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='quantity'placeholder=\"Count\" aria-label=\"Quantity\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<button className=\"btn dropdown-toggle formButton\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t    \t\t{solidType}\n\t  \t\t</button>\n  \t\t\t<div className=\"dropdown-menu scrollable-menu down\">\n\t  \t\t\t<ul>\n\t\t  \t\t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Lb'); solidConversionChange(16.0)}}>Lb</li>\n\t\t    \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Oz'); solidConversionChange(1.0)}}>Oz</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('g'); solidConversionChange(0.035274)}}>g</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Kg'); solidConversionChange(35.274)}}>Kg</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Ton'); solidConversionChange(32000.0)}}>Ton</li>\n\t\t\t  \t</ul>\n\t  \t\t</div>\n  \t\t\t<button type=\"button\" class=\"btn formButton\" onClick={() => {addToArray(unitConversion, itemType, base); clearSolidFields()}}>Add</button>\n\n\t\t</div>\n\t)\n}\n\nexport default Solid;","import React from 'react'\n\nconst Item = ({position, name, unitPrice, unitBase, deleteItem}) => {\n\tlet nameCopy = name;\n\tif (nameCopy.length > 5) {\n\t\tnameCopy = nameCopy.substring(0,5) + '..'\n\t}\n\tlet unitPriceCopy = unitPrice;\n\tif (unitPriceCopy > 9) {\n\t\tunitPriceCopy = unitPriceCopy.toFixed(3);\n\t} else {\n\t\tunitPriceCopy = unitPriceCopy.toFixed(4);\n\t}\n\treturn (\n\t\t<div className='ml4 item'>\n\t\t\t<div><h4>{`${position+1}.`}</h4></div> \n\t\t\t<div><h4>{`${nameCopy}`}</h4></div>  \n\t\t\t<div><h4>{`$${unitPriceCopy}\\/${unitBase}`}</h4></div>  \n\t\t\t<div><button type=\"button\" class=\"btn btn-sm button\" onClick={() => deleteItem(position)}>-</button></div>\n\t\t</div>\n\t)\n}\n\nexport default Item;","import React from 'react'\nimport Item from '../Item/Item'\n\nconst ItemList = ({ itemList, deleteItem }) => {\n\treturn (\n\t\t<div className='itemList'>\n\t\t\t{itemList.map((item, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Item \n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tposition={i}\n\t\t\t\t\t\tname={itemList[i].name}\n\t\t\t\t\t\tunitPrice={itemList[i].unitPrice}\n\t\t\t\t\t\tunitBase={itemList[i].base}\n\t\t\t\t\t\tdeleteItem={deleteItem}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default ItemList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setItemTypeSelected, setLiquidType, setLiquidConversion, setSolidType, setSolidConversion } from './actions';\nimport Header from './components/Header/Header';\nimport ItemType from './components/ItemType/ItemType';\nimport Unit from './components/Unit/Unit';\nimport Liquid from './components/Liquid/Liquid';\nimport Solid from './components/Solid/Solid';\nimport ItemList from './components/ItemList/ItemList';\nimport './App.css';\n\nconst mapStateToProps = state => {\n  return {\n    itemType: state.updateItemType.itemType,\n    liquidType: state.updateLiquidType.liquidType,\n    numOz: state.updateLiquidConversion.numOz,\n    solidType: state.updateSolidType.solidType,\n    numGrams: state.updateSolidConversion.numGrams,\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    itemTypeChange: (itemType) => dispatch(setItemTypeSelected(itemType)),\n    liquidTypeChange: (liquidType) => dispatch(setLiquidType(liquidType)),\n    liquidConversionChange: (liquidConversion) => dispatch(setLiquidConversion(liquidConversion)),\n    solidTypeChange: (solidType) => dispatch(setSolidType(solidType)),\n    solidConversionChange: (solidConversion) => dispatch(setSolidConversion(solidConversion)),\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itemList: []\n    }\n  }\n\n  async addToArray(unitConversion, itemType, base) {\n    const priceReal = parseFloat(document.getElementById('price').value)\n    const quantityReal = parseFloat(document.getElementById('quantity').value)\n    const item = {\n      name: document.getElementById('name').value,\n      price: priceReal,\n      quantity: quantityReal,\n      unitConversion: unitConversion,\n      itemType: itemType,\n      unitPrice: priceReal / (quantityReal * unitConversion),\n      base: base\n    }\n    const itemListCopy = [... this.state.itemList]\n    itemListCopy.push(item);\n    itemListCopy.sort((a,b) => (a.unitPrice > b.unitPrice) ? 1 : -1)\n    await this.setState({itemList: itemListCopy})\n\n  }\n\n  clearFields() {\n    document.getElementById('name').innerHTML = ''\n    document.getElementById('price').innerHTML = ''\n    document.getElementById('quantity').innerHTML = ''\n    console.log('clear')\n  }\n\n  async clearList() {\n    const itemListCopy = []\n    await this.setState({itemList: itemListCopy})\n  }\n\n  async deleteItem(position) {\n    const itemListCopy = [... this.state.itemList]\n    itemListCopy.splice(position, 1)\n    await this.setState({itemList: itemListCopy})\n\n  }\n\n  render() {\n    const { itemType, \n            itemTypeChange, \n            liquidTypeChange, \n            liquidType, \n            liquidConversionChange, \n            numOz,\n            solidTypeChange,\n            solidType,\n            solidConversionChange,\n            numGrams\n          } = this.props;\n    let inputForm = <Unit \n                      itemList={this.state.itemList} \n                      addToArray={this.addToArray.bind(this)} \n                      itemType={itemType} \n                      unitConversion={1}\n                      base={'unit'}\n                      clearFields={this.clearFields}\n                      />\n    if (itemType === 'liquid') {\n      inputForm = <Liquid \n                          setLiquidType={liquidTypeChange} \n                          liquidType={liquidType} \n                          liquidConversionChange={liquidConversionChange} \n                          itemList={this.state.itemList}\n                          addToArray={this.addToArray.bind(this)}\n                          itemType={itemType}\n                          unitConversion={numOz}\n                          base={'oz'}\n                          clearFields={this.clearFields}\n                  />\n    } else if (itemType === 'solid') {\n      inputForm = <Solid \n                    setSolidType={solidTypeChange} \n                    solidType={solidType} \n                    solidConversionChange={solidConversionChange} \n                    itemList={this.state.itemList}\n                    addToArray={this.addToArray.bind(this)}\n                    itemType={itemType}\n                    unitConversion={numGrams}\n                    base={'oz'}\n                    clearFields={this.clearFields}\n                  />\n    }\n    return (\n      <div>\n        <Header />\n        <ItemType itemTypeChange={itemTypeChange} itemType={itemType} clearFields={this.clearFields} clearList={this.clearList.bind(this)}/>\n        {inputForm}\n        <ItemList itemList={this.state.itemList} deleteItem={this.deleteItem.bind(this)}/> \n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport { \n\tCHANGE_ITEM_TYPE, \n\tCHANGE_LIQUID_UNIT,\n\tCHANGE_LIQUID_CONVERSION,\n\tCHANGE_SOLID_UNIT,\n\tCHANGE_SOLID_CONVERSION,\n} from './constants'\n\n\n\nexport const setItemTypeSelected = (itemType) => {\n\treturn {\n\t\ttype: CHANGE_ITEM_TYPE,\n\t\tpayload: itemType\n\t}\n}\n\nexport const setLiquidType = (liquidType) => {\n\treturn {\n\t\ttype: CHANGE_LIQUID_UNIT,\n\t\tpayload: liquidType\n\t}\n}\n\nexport const setLiquidConversion = (liquidConversion) => {\n\treturn {\n\t\ttype: CHANGE_LIQUID_CONVERSION,\n\t\tpayload: liquidConversion\n\t}\n}\n\nexport const setSolidType = (solidType) => {\n\treturn {\n\t\ttype: CHANGE_SOLID_UNIT,\n\t\tpayload: solidType\n\t}\n}\n\nexport const setSolidConversion = (solidConversion) => {\n\treturn {\n\t\ttype: CHANGE_SOLID_CONVERSION,\n\t\tpayload: solidConversion\n\t}\n}\n\n\n","export const CHANGE_ITEM_TYPE = 'CHANGE_ITEM_TYPE'\nexport const CHANGE_LIQUID_UNIT = 'CHANGE_LIQUID_UNIT'\nexport const CHANGE_LIQUID_CONVERSION = 'CHANGE_LIQUID_CONVERSION'\nexport const CHANGE_SOLID_UNIT = 'CHANGE_SOLID_UNIT'\nexport const CHANGE_SOLID_CONVERSION = 'CHANGE_SOLID_CONVERSION'","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { updateItemType, updateLiquidType, updateLiquidConversion, updateSolidType, updateSolidConversion } from './reducers';\nimport './index.css';\nimport 'tachyons'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ updateItemType, updateLiquidType, updateLiquidConversion, updateSolidType, updateSolidConversion});\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <Provider store={store}>\n\t    <App />\n\t  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}