{"version":3,"sources":["components/Header/cover.png","reducers.js","components/Header/Header.js","components/ItemType/ItemType.js","components/Unit/Unit.js","components/Liquid/Liquid.js","components/Solid/Solid.js","components/Length/Length.js","components/Item/Item.js","components/ItemList/ItemList.js","components/InvalidInput/InvalidInput.js","App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["module","exports","initialItemType","itemType","initialLiquidType","liquidType","initialLiquidConversion","numOz","initialSolidType","solidType","initialSolidConversion","numGrams","initialLengthType","lengthType","initialLengthConversion","numMm","Header","className","class","src","cover","ItemType","itemTypeChange","clearFields","clearList","liquidStyle","solidStyle","unitStyle","lengthStyle","backgroundColor","type","onClick","style","Unit","itemList","addToArray","unitConversion","base","checkFields","id","placeholder","aria-label","aria-describedby","document","getElementById","value","Liquid","setLiquidType","liquidConversionChange","data-toggle","aria-haspopup","aria-expanded","Solid","setSolidType","solidConversionChange","setLengthType","lengthConversionChange","Item","position","name","unitPrice","unitBase","deleteItem","nameCopy","length","substring","unitPriceCopy","toFixed","ItemList","map","item","i","key","InvalidInput","invalidInput","hideAlert","App","state","validInput","priceReal","parseFloat","quantityReal","price","quantity","itemListCopy","this","push","sort","a","b","setState","innerHTML","splice","count","console","log","nameVal","priceVal","countVal","isNaN","props","display","liquidTypeChange","solidTypeChange","lengthTypeChange","inputForm","bind","Length","Component","connect","updateItemType","updateLiquidType","updateLiquidConversion","updateSolidType","updateSolidConversion","updateLengthType","updateLengthConversion","dispatch","payload","setItemTypeSelected","liquidConversion","setLiquidConversion","solidConversion","setSolidConversion","lengthConversion","setLengthConversion","Boolean","window","location","hostname","match","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,mC,+KCUrCC,EAAmB,CACxBC,SAAU,QAGLC,EAAoB,CACzBC,WAAY,QAGPC,EAA0B,CAC/BC,MAAO,GAGFC,EAAmB,CACxBC,UAAW,QAGNC,EAAyB,CAC9BC,SAAU,GAGLC,EAAoB,CACzBC,WAAY,QAGPC,EAA0B,CAC/BC,MAAO,G,6FCzBOC,EARA,WACd,OACC,yBAAKC,UAAU,cACd,yBAAKC,MAAM,oBAAoBC,IAAKC,QCwCxBC,EA3CE,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,eAAgBnB,EAAuC,EAAvCA,SAAUoB,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UACtDC,EAAc,GACdC,EAAa,GACbC,EAAY,GACZC,EAAc,GA6BlB,OA3BCH,EADgB,WAAbtB,EACW,CACb0B,gBAAiB,WAGJ,GAGdH,EADgB,UAAbvB,EACU,CACZ0B,gBAAiB,WAGL,GAGbF,EADgB,SAAbxB,EACS,CACX0B,gBAAiB,WAGN,GAGZD,EADgB,WAAbzB,EACW,CACb0B,gBAAiB,WAGJ,GAGd,yBAAKZ,UAAU,MACd,4BAAQa,KAAK,SAASb,UAAU,aAAac,QAAS,WAAOT,EAAe,UAAWC,IAAeC,KAAeQ,MAAOP,GAA5H,UACA,4BAAQK,KAAK,SAASb,UAAU,aAAac,QAAS,WAAOT,EAAe,SAAUC,IAAeC,KAAeQ,MAAON,GAA3H,SACA,4BAAQI,KAAK,SAASb,UAAU,aAAac,QAAS,WAAOT,EAAe,UAAWC,IAAeC,KAAeQ,MAAOJ,GAA5H,UACA,4BAAQE,KAAK,SAASb,UAAU,aAAac,QAAS,WAAOT,EAAe,QAASC,IAAeC,KAAeQ,MAAOL,GAA1H,UCpBYM,EAZF,SAAC,GAAyE,EAAvEC,SAAuE,EAA7DC,WAA8D,IAAlDhC,EAAiD,EAAjDA,SAAUiC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAErE,OACC,yBAAKpB,MAAM,4BACR,2BAAOY,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,OAAOC,YAAY,OAAOC,aAAW,OAAOC,mBAAiB,iBACxG,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,QAAQC,YAAY,QAAQC,aAAW,QAAQC,mBAAiB,iBAC3G,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,WAAWC,YAAY,QAAQC,aAAW,WAAWC,mBAAiB,iBAC9G,4BAAQZ,KAAK,SAASZ,MAAM,iBAAiBa,QAAS,WAAOO,EAAYF,EAAgBjC,EAAUkC,GAZ1GM,SAASC,eAAe,QAAQC,MAAQ,GACvCF,SAASC,eAAe,SAASC,MAAQ,GACzCF,SAASC,eAAe,YAAYC,MAAQ,KAUtC,SCqBOC,EA3BA,SAAC,GAA8H,IAA5HC,EAA2H,EAA3HA,cAAe1C,EAA4G,EAA5GA,WAAY2C,EAAgG,EAAhGA,uBAA8C7C,GAAkD,EAAxE+B,SAAwE,EAA9DC,WAA8D,EAAlDhC,UAAUiC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1H,OACC,yBAAKpB,MAAM,4BACR,2BAAOY,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,OAAOC,YAAY,OAAOC,aAAW,OAAOC,mBAAiB,iBACxG,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,QAAQC,YAAY,QAAQC,aAAW,QAAQC,mBAAiB,iBAC3G,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,WAAWC,YAAY,QAAQC,aAAW,WAAWC,mBAAiB,iBACjH,4BAAQzB,UAAU,iCAAiCa,KAAK,SAASmB,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SACxH9C,GAEH,yBAAKY,UAAU,sCACd,4BACC,wBAAIA,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,UAAWC,EAAuB,OAA9F,UACC,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,SAAUC,EAAuB,UAA7F,SACD,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,SAAUC,EAAuB,MAA7F,SACA,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,QAASC,EAAuB,MAA5F,QACA,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,OAAQC,EAAuB,KAA3F,OACA,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,MAAOC,EAAuB,KAA1F,MACA,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,QAASC,EAAuB,MAA5F,QACA,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,MAAOC,EAAuB,WAA1F,MACA,wBAAI/B,UAAU,gBAAgBc,QAAS,WAAOgB,EAAc,OAAQC,EAAuB,WAA3F,SAGF,4BAAQlB,KAAK,SAASZ,MAAM,iBAAiBa,QAAS,WAAOO,EAAYF,EAAgBjC,EAAUkC,GA5BvGM,SAASC,eAAe,QAAQC,MAAQ,GACrCF,SAASC,eAAe,SAASC,MAAQ,GACzCF,SAASC,eAAe,YAAYC,MAAQ,KA0B3C,SCAUO,EAvBD,SAAC,GAA2H,IAAzHC,EAAwH,EAAxHA,aAAc5C,EAA0G,EAA1GA,UAAW6C,EAA+F,EAA/FA,sBAA6CnD,GAAkD,EAAxE+B,SAAwE,EAA9DC,WAA8D,EAAlDhC,UAAUiC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtH,OACC,yBAAKpB,MAAM,4BACR,2BAAOY,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,OAAOC,YAAY,OAAOC,aAAW,OAAOC,mBAAiB,iBACxG,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,QAAQC,YAAY,QAAQC,aAAW,QAAQC,mBAAiB,iBAC3G,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,WAAUC,YAAY,QAAQC,aAAW,WAAWC,mBAAiB,iBAChH,4BAAQzB,UAAU,iCAAiCa,KAAK,SAASmB,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SACxH1C,GAEH,yBAAKQ,UAAU,sCACd,4BACC,wBAAIA,UAAU,gBAAgBc,QAAS,WAAOsB,EAAa,MAAOC,EAAsB,MAAxF,MACC,wBAAIrC,UAAU,gBAAgBc,QAAS,WAAOsB,EAAa,MAAOC,EAAsB,KAAxF,MACD,wBAAIrC,UAAU,gBAAgBc,QAAS,WAAOsB,EAAa,KAAMC,EAAsB,WAAvF,KACA,wBAAIrC,UAAU,gBAAgBc,QAAS,WAAOsB,EAAa,MAAOC,EAAsB,UAAxF,MACA,wBAAIrC,UAAU,gBAAgBc,QAAS,WAAOsB,EAAa,OAAQC,EAAsB,QAAzF,SAGF,4BAAQxB,KAAK,SAASZ,MAAM,iBAAiBa,QAAS,WAAOO,EAAYF,EAAgBjC,EAAUkC,GAvBvGM,SAASC,eAAe,QAAQC,MAAQ,GACrCF,SAASC,eAAe,SAASC,MAAQ,GACzCF,SAASC,eAAe,YAAYC,MAAQ,KAqB3C,SCQUC,EA1BA,SAAC,GAA8H,IAA5HS,EAA2H,EAA3HA,cAAe1C,EAA4G,EAA5GA,WAAY2C,EAAgG,EAAhGA,uBAA8CrD,GAAkD,EAAxE+B,SAAwE,EAA9DC,WAA8D,EAAlDhC,UAAUiC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1H,OACC,yBAAKpB,MAAM,4BACR,2BAAOY,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,OAAOC,YAAY,OAAOC,aAAW,OAAOC,mBAAiB,iBACxG,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,QAAQC,YAAY,QAAQC,aAAW,QAAQC,mBAAiB,iBAC3G,2BAAOZ,KAAK,OAAOZ,MAAM,eAAeqB,GAAG,WAAUC,YAAY,QAAQC,aAAW,WAAWC,mBAAiB,iBAChH,4BAAQzB,UAAU,iCAAiCa,KAAK,SAASmB,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SACxHtC,GAEH,yBAAKI,UAAU,sCACd,4BACC,wBAAIA,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,MAAOC,EAAuB,OAA1F,MACC,wBAAIvC,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,KAAMC,EAAuB,OAAzF,KACD,wBAAIvC,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,MAAOC,EAAuB,MAA1F,MACA,wBAAIvC,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,MAAOC,EAAuB,KAA1F,MACA,wBAAIvC,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,QAASC,EAAuB,WAA5F,QACA,wBAAIvC,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,QAASC,EAAuB,SAA5F,QACA,wBAAIvC,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,QAASC,EAAuB,SAA5F,QACA,wBAAIvC,UAAU,gBAAgBc,QAAS,WAAOwB,EAAc,QAASC,EAAuB,QAA5F,UAGF,4BAAQ1B,KAAK,SAASZ,MAAM,iBAAiBa,QAAS,WAAOO,EAAYF,EAAgBjC,EAAUkC,GA1BvGM,SAASC,eAAe,QAAQC,MAAQ,GACrCF,SAASC,eAAe,SAASC,MAAQ,GACzCF,SAASC,eAAe,YAAYC,MAAQ,KAwB3C,SCNUY,EArBF,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAC/CC,EAAWJ,EACXI,EAASC,OAAS,IACrBD,EAAWA,EAASE,UAAU,EAAE,GAAK,MAEtC,IAAIC,EAAgBN,EAMpB,OAJCM,EADGA,EAAgB,EACHA,EAAcC,QAAQ,GAEtBD,EAAcC,QAAQ,GAGtC,yBAAKlD,UAAU,YACd,6BAAK,sCAAQyC,EAAS,EAAjB,OACL,6BAAK,sCAAQK,KACb,6BAAK,uCAASG,EAAT,YAA2BL,KAChC,6BAAK,4BAAQ/B,KAAK,SAASZ,MAAM,oBAAoBa,QAAS,kBAAM+B,EAAWJ,KAA1E,QCIOU,EAnBE,SAAC,GAA8B,IAA5BlC,EAA2B,EAA3BA,SAAU4B,EAAiB,EAAjBA,WAC7B,OACC,yBAAK7C,UAAU,YACbiB,EAASmC,KAAI,SAACC,EAAMC,GACpB,OACC,kBAAC,EAAD,CACCC,IAAKD,EACLb,SAAUa,EACVZ,KAAMzB,EAASqC,GAAGZ,KAClBC,UAAW1B,EAASqC,GAAGX,UACvBC,SAAU3B,EAASqC,GAAGlC,KACtByB,WAAYA,SCEHW,EAdM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACpC,IAAKD,EACJ,OACC,6BACI,yBAAKnC,GAAG,QAAQrB,MAAM,yCAEpB,4BAAQY,KAAK,SAASZ,MAAM,QAAQa,QAAS,kBAAM4C,MAAnD,QACA,uFCiCJC,G,wDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACX3C,SAAU,GACV4C,YAAY,GAJF,E,gGAQG1C,EAAgBjC,EAAUkC,G,oFACnC0C,EAAYC,WAAWrC,SAASC,eAAe,SAASC,OACxDoC,EAAeD,WAAWrC,SAASC,eAAe,YAAYC,OAC9DyB,EAAO,CACXX,KAAMhB,SAASC,eAAe,QAAQC,MACtCqC,MAAOH,EACPI,SAAUF,EACV7C,eAAgBA,EAChBjC,SAAUA,EACVyD,UAAWmB,GAAaE,EAAe7C,GACvCC,KAAMA,IAEF+C,E,YAAoBC,KAAKR,MAAM3C,WACxBoD,KAAKhB,GAClBc,EAAaG,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAE5B,UAAY6B,EAAE7B,UAAa,GAAK,K,SACxDyB,KAAKK,SAAS,CAACxD,SAAUkD,I,+IAI/BzC,SAASC,eAAe,QAAQ+C,UAAY,GAC5ChD,SAASC,eAAe,SAAS+C,UAAY,GAC7ChD,SAASC,eAAe,YAAY+C,UAAY,K,yJAI1CP,EAAe,G,SACfC,KAAKK,SAAS,CAACxD,SAAUkD,I,gLAGhB1B,G,8EACT0B,E,YAAoBC,KAAKR,MAAM3C,WACxB0D,OAAOlC,EAAU,G,SACxB2B,KAAKK,SAAS,CAACxD,SAAUkD,I,kLAIdhD,EAAgBjC,EAAUkC,G,oFACvCsB,EAAOhB,SAASC,eAAe,QAC/BsC,EAAQvC,SAASC,eAAe,SAChCiD,EAAQlD,SAASC,eAAe,YACF,GAClCkD,QAAQC,IAAI,UACRpC,GAAQuB,GAASW,G,oBACnBG,EAAUrC,EAAKd,MACfoD,EAAWf,EAAMrC,MACjBqD,EAAWL,EAAMhD,MACD,KAAZmD,GAA+B,KAAbC,GAAgC,KAAbC,GAAoBC,MAAMF,IAAcE,MAAMD,G,kBACvD,SAA1Bb,KAAKe,MAAM/F,YAAiD,WAAxBgF,KAAKe,MAAMjG,UACtB,SAAzBkF,KAAKe,MAAM3F,WAAgD,UAAxB4E,KAAKe,MAAMjG,UACpB,SAA1BkF,KAAKe,MAAMvF,YAAiD,WAAxBwE,KAAKe,MAAMjG,UAGhB,SAAxBkF,KAAKe,MAAMjG,YAFpBkF,KAAKlD,WAAWC,EAAgBjC,EAAUkC,GAC1CM,SAASC,eAAe,SAASZ,MAAMqE,QAAU,Q,+BAMnDP,QAAQC,IAAI,iB,UACNV,KAAKK,SAAS,CAAEZ,YAAY,I,QAClCnC,SAASC,eAAe,SAASZ,MAAMqE,QAAU,Q,8IAMrD1D,SAASC,eAAe,SAASZ,MAAMqE,QAAU,S,+BAGzC,IAAD,EAeGhB,KAAKe,MAdPjG,EADD,EACCA,SACAmB,EAFD,EAECA,eACAgF,EAHD,EAGCA,iBACAjG,EAJD,EAICA,WACA2C,EALD,EAKCA,uBACAzC,EAND,EAMCA,MACAgG,EAPD,EAOCA,gBACA9F,EARD,EAQCA,UACA6C,EATD,EASCA,sBACA3C,EAVD,EAUCA,SACA6F,EAXD,EAWCA,iBACA3F,EAZD,EAYCA,WACA2C,EAbD,EAaCA,uBACAzC,EAdD,EAcCA,MAEJ0F,EAAY,kBAAC,EAAD,CACEvE,SAAUmD,KAAKR,MAAM3C,SACrBC,WAAYkD,KAAKlD,WAAWuE,KAAKrB,MACjClF,SAAUA,EACViC,eAAgB,EAChBC,KAAM,OACNC,YAAa+C,KAAK/C,YAAYoE,KAAKrB,QAuCrD,MArCiB,WAAblF,EACFsG,EAAY,kBAAC,EAAD,CACQ1D,cAAeuD,EACfjG,WAAYA,EACZ2C,uBAAwBA,EACxBd,SAAUmD,KAAKR,MAAM3C,SACrBC,WAAYkD,KAAKlD,WAAWuE,KAAKrB,MACjClF,SAAUA,EACViC,eAAgB7B,EAChB8B,KAAM,KACNC,YAAa+C,KAAK/C,YAAYoE,KAAKrB,QAEjC,UAAblF,EACTsG,EAAY,kBAAC,EAAD,CACEpD,aAAckD,EACd9F,UAAWA,EACX6C,sBAAuBA,EACvBpB,SAAUmD,KAAKR,MAAM3C,SACrBC,WAAYkD,KAAKlD,WAAWuE,KAAKrB,MACjClF,SAAUA,EACViC,eAAgBzB,EAChB0B,KAAM,KACNC,YAAa+C,KAAK/C,YAAYoE,KAAKrB,QAE3B,WAAblF,IACTsG,EAAY,kBAACE,EAAD,CACEpD,cAAeiD,EACf3F,WAAYA,EACZ2C,uBAAwBA,EACxBtB,SAAUmD,KAAKR,MAAM3C,SACrBC,WAAYkD,KAAKlD,WAAWuE,KAAKrB,MACjClF,SAAUA,EACViC,eAAgBrB,EAChBsB,KAAM,KACNC,YAAa+C,KAAK/C,YAAYoE,KAAKrB,SAG/CA,KAAKR,MAAMC,WAET,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUxD,eAAgBA,EAAgBnB,SAAUA,EAAUoB,YAAa8D,KAAK9D,YAAaC,UAAW6D,KAAK7D,UAAUkF,KAAKrB,QAC3HoB,EACD,kBAAC,EAAD,CAAUvE,SAAUmD,KAAKR,MAAM3C,SAAU4B,WAAYuB,KAAKvB,WAAW4C,KAAKrB,SAK5E,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAU/D,eAAgBA,EAAgBnB,SAAUA,EAAUoB,YAAa8D,KAAK9D,YAAaC,UAAW6D,KAAK7D,UAAUkF,KAAKrB,QAC3HoB,EACD,kBAAC,EAAD,CAAc3B,WAAYO,KAAKR,MAAMC,WAAYH,UAAWU,KAAKV,YACjE,kBAAC,EAAD,CAAUzC,SAAUmD,KAAKR,MAAM3C,SAAU4B,WAAYuB,KAAKvB,WAAW4C,KAAKrB,a,GA1JpEuB,cAiKHC,eA9LS,SAAAhC,GACtB,MAAO,CACL1E,SAAU0E,EAAMiC,eAAe3G,SAC/BE,WAAYwE,EAAMkC,iBAAiB1G,WACnCE,MAAOsE,EAAMmC,uBAAuBzG,MACpCE,UAAWoE,EAAMoC,gBAAgBxG,UACjCE,SAAUkE,EAAMqC,sBAAsBvG,SACtCE,WAAYgE,EAAMsC,iBAAiBtG,WACnCE,MAAO8D,EAAMuC,uBAAuBrG,UAKb,SAACsG,GAC1B,MAAO,CACL/F,eAAgB,SAACnB,GAAD,OAAckH,ECfC,SAAClH,GACnC,MAAO,CACN2B,KCf8B,mBDgB9BwF,QAASnH,GDYgCoH,CAAoBpH,KAC3DmG,iBAAkB,SAACjG,GAAD,OAAgBgH,ECTT,SAAChH,GAC7B,MAAO,CACNyB,KCrBgC,qBDsBhCwF,QAASjH,GDMoC0C,CAAc1C,KACzD2C,uBAAwB,SAACwE,GAAD,OAAsBH,ECHf,SAACG,GACnC,MAAO,CACN1F,KC3BsC,2BD4BtCwF,QAASE,GDAgDC,CAAoBD,KAC3EjB,gBAAiB,SAAC9F,GAAD,OAAe4G,ECGR,SAAC5G,GAC5B,MAAO,CACNqB,KCjC+B,oBDkC/BwF,QAAS7G,GDNkC4C,CAAa5C,KACtD6C,sBAAuB,SAACoE,GAAD,OAAqBL,ECSd,SAACK,GAClC,MAAO,CACN5F,KCvCqC,0BDwCrCwF,QAASI,GDZ8CC,CAAmBD,KACxElB,iBAAkB,SAAC3F,GAAD,OAAgBwG,ECeT,SAACxG,GAC7B,MAAO,CACNiB,KC7CgC,qBD8ChCwF,QAASzG,GDlBoC0C,CAAc1C,KACzD2C,uBAAwB,SAACoE,GAAD,OAAsBP,ECqBf,SAACO,GACnC,MAAO,CACN9F,KCnDsC,2BDoDtCwF,QAASM,GDxBgDC,CAAoBD,QAyKhEf,CAA6CjC,GG/LxCkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPN,IAAMC,EAASC,yBAETC,EAAcC,YAAgB,CAAExB,edwBR,WAAuC,IAAtCjC,EAAqC,uDAA/B3E,EAAiBqI,EAAc,uDAAP,GAC5D,OAAQA,EAAOzG,MACd,IYvC8B,mBZwC7B,OAAO0G,OAAOC,OAAO,GAAI5D,EAAO,CAAE1E,SAAUoI,EAAOjB,UACpD,QACC,OAAOzC,Ic7B4CkC,iBdiCvB,WAAyC,IAAxClC,EAAuC,uDAAjCzE,EAAmBmI,EAAc,uDAAP,GAC/D,OAAOA,EAAOzG,MACb,IY/CgC,qBZgD/B,OAAO0G,OAAOC,OAAO,GAAI5D,EAAO,CAAExE,WAAYkI,EAAOjB,UACtD,QACC,OAAOzC,IctC8DmC,uBd0ClC,WAA+C,IAA9CnC,EAA6C,uDAAvCvE,EAAyBiI,EAAc,uDAAP,GAC5E,OAAOA,EAAOzG,MACb,IYvDsC,2BZwDrC,OAAO0G,OAAOC,OAAO,GAAI5D,EAAO,CAAEtE,MAAOgI,EAAOjB,UACjD,QACC,OAAOzC,Ic/CsFoC,gBdmDlE,WAAwC,IAAvCpC,EAAsC,uDAAhCrE,EAAkB+H,EAAc,uDAAP,GAC7D,OAAOA,EAAOzG,MACb,IY/D+B,oBZgE9B,OAAO0G,OAAOC,OAAO,GAAI5D,EAAO,CAAEpE,UAAW8H,EAAOjB,UACrD,QACC,OAAOzC,IcxDuGqC,sBd4D5E,WAA8C,IAA7CrC,EAA4C,uDAAtCnE,EAAwB6H,EAAc,uDAAP,GAC1E,OAAOA,EAAOzG,MACb,IYvEqC,0BZwEpC,OAAO0G,OAAOC,OAAO,GAAI5D,EAAO,CAAElE,SAAU4H,EAAOjB,UACpD,QACC,OAAOzC,IcjE8HsC,iBdqEzG,WAAyC,IAAxCtC,EAAuC,uDAAjCjE,EAAmB2H,EAAc,uDAAP,GAC/D,OAAOA,EAAOzG,MACb,IY/EgC,qBZgF/B,OAAO0G,OAAOC,OAAO,GAAI5D,EAAO,CAAEhE,WAAY0H,EAAOjB,UACtD,QACC,OAAOzC,Ic1EgJuC,uBd8EpH,WAA+C,IAA9CvC,EAA6C,uDAAvC/D,EAAyByH,EAAc,uDAAP,GAC5E,OAAOA,EAAOzG,MACb,IYvFsC,2BZwFrC,OAAO0G,OAAOC,OAAO,GAAI5D,EAAO,CAAE9D,MAAOwH,EAAOjB,UACjD,QACC,OAAOzC,MclFJ6D,EAAQC,YAAYN,EAAaO,YAAgBT,IAGvDU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACC,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAGH/F,SAASC,eAAe,SD4GpB,kBAAmBoG,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzD,QAAQyD,MAAMA,EAAMC,c","file":"static/js/main.743b70fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.b0b04b11.png\";","import { \n\tCHANGE_ITEM_TYPE, \n\tCHANGE_LIQUID_UNIT,\n\tCHANGE_LIQUID_CONVERSION, \n\tCHANGE_SOLID_UNIT,\n\tCHANGE_SOLID_CONVERSION,\n\tCHANGE_LENGTH_UNIT,\n\tCHANGE_LENGTH_CONVERSION, \n} from './constants'\n\nconst initialItemType  = {\n\titemType: 'unit'\n}\n\nconst initialLiquidType = {\n\tliquidType: 'Unit'\n}\n\nconst initialLiquidConversion = {\n\tnumOz: 0\n}\n\nconst initialSolidType = {\n\tsolidType: 'Unit'\n}\n\nconst initialSolidConversion = {\n\tnumGrams: 0\n}\n\nconst initialLengthType = {\n\tlengthType: 'Unit'\n}\n\nconst initialLengthConversion = {\n\tnumMm: 0\n}\nexport const updateItemType = (state=initialItemType, action={}) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_ITEM_TYPE:\n\t\t\treturn Object.assign({}, state, { itemType: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateLiquidType =(state=initialLiquidType, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_LIQUID_UNIT: \n\t\t\treturn Object.assign({}, state, { liquidType: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateLiquidConversion = (state=initialLiquidConversion, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_LIQUID_CONVERSION: \n\t\t\treturn Object.assign({}, state, { numOz: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateSolidType =(state=initialSolidType, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SOLID_UNIT: \n\t\t\treturn Object.assign({}, state, { solidType: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateSolidConversion = (state=initialSolidConversion, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SOLID_CONVERSION: \n\t\t\treturn Object.assign({}, state, { numGrams: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateLengthType =(state=initialLengthType, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_LENGTH_UNIT: \n\t\t\treturn Object.assign({}, state, { lengthType: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const updateLengthConversion = (state=initialLengthConversion, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_LENGTH_CONVERSION: \n\t\t\treturn Object.assign({}, state, { numMm: action.payload }); \n\t\tdefault: \n\t\t\treturn state;\n\t}\n}","import React from 'react';\nimport cover from './cover.png'\nconst Header = () => {\n\treturn (\n\t\t<div className='header pt1'>\n\t\t\t<img class=\"center-fit imgbox\" src={cover} />\n\t\t</div>\n\t)\n}\n\nexport default Header;","import React from 'react';\n\nconst ItemType = ({ itemTypeChange, itemType, clearFields, clearList }) => {\n\tvar liquidStyle = {}\n\tvar solidStyle = {}\n\tvar unitStyle = {}\n\tvar lengthStyle = {}\n\tif (itemType === 'liquid') {\n\t\tliquidStyle = {\n\t\t\tbackgroundColor: '#B8B8B8',\n\t\t}\n\t} else {\n\t\tliquidStyle = {}\n\t}\n\tif (itemType === 'solid') {\n\t\tsolidStyle = {\n\t\t\tbackgroundColor: '#B8B8B8'\n\t\t}\n\t} else {\n\t\tsolidStyle = {}\n\t}\n\tif (itemType === 'unit') {\n\t\tunitStyle = {\n\t\t\tbackgroundColor: '#B8B8B8'\n\t\t}\n\t} else {\n\t\tunitStyle = {}\n\t}\n\tif (itemType === 'length') {\n\t\tlengthStyle = {\n\t\t\tbackgroundColor: '#B8B8B8'\n\t\t}\n\t} else {\n\t\tlengthStyle = {}\n\t}\n\treturn (\n\t\t<div className='tc'>\n\t\t\t<button type=\"button\" className=\"btn button\" onClick={() => {itemTypeChange('liquid'); clearFields(); clearList();}} style={liquidStyle}>Liquid</button>\n\t\t\t<button type=\"button\" className=\"btn button\" onClick={() => {itemTypeChange('solid'); clearFields(); clearList();}} style={solidStyle}>Solid</button>\n\t\t\t<button type=\"button\" className=\"btn button\" onClick={() => {itemTypeChange('length'); clearFields(); clearList();}} style={lengthStyle}>Length</button>\n\t\t\t<button type=\"button\" className=\"btn button\" onClick={() => {itemTypeChange('unit'); clearFields(); clearList();}} style={unitStyle}>Unit</button>\n\t\t</div>\n\t)\n}\n\nexport default ItemType","import React from 'react';\n\nconst clearUnitFields = () => {\n\tdocument.getElementById('name').value = ''\n  document.getElementById('price').value = ''\n  document.getElementById('quantity').value = ''\n}\n\nconst Unit = ({ itemList, addToArray, itemType, unitConversion, base, checkFields}) => {\n\n\treturn (\n\t\t<div class=\"input-group mb-3 mv3 ml2\">\n  \t\t\t<input type=\"text\" class=\"form-control\" id='name' placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='price' placeholder=\"Price\" aria-label=\"Price\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='quantity' placeholder=\"Count\" aria-label=\"Quantity\" aria-describedby=\"basic-addon1\" />\n        <button type=\"button\" class=\"btn formButton\" onClick={() => {checkFields(unitConversion, itemType, base); clearUnitFields()}}>Add</button>\n\t\t</div>\n\t)\n}\n\nexport default Unit;","import React from 'react';\n\nconst clearLiquidFields = () => {\n\tdocument.getElementById('name').value = ''\n    document.getElementById('price').value = ''\n    document.getElementById('quantity').value = ''\n}\n\n\nconst Liquid = ({ setLiquidType, liquidType, liquidConversionChange, itemList, addToArray, itemType, unitConversion, base, checkFields }) => {\n\treturn (\n\t\t<div class=\"input-group mb-3 mv3 ml2\">\n  \t\t\t<input type=\"text\" class=\"form-control\" id='name' placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='price' placeholder=\"Price\" aria-label=\"Price\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='quantity' placeholder=\"Count\" aria-label=\"Quantity\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<button className=\"btn dropdown-toggle formButton\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t    \t\t{liquidType}\n\t  \t\t</button>\n  \t\t\t<div className=\"dropdown-menu scrollable-menu down\" >\n\t  \t\t\t<ul>\n\t\t  \t\t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Gallon'); liquidConversionChange(128.0)}}>Gallon</li>\n\t\t    \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Liter'); liquidConversionChange(33.814)}}>Liter</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Quart'); liquidConversionChange(32.0)}}>Quart</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Pint'); liquidConversionChange(16.0)}}>Pint</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Cup'); liquidConversionChange(8.0)}}>Cup</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('Oz'); liquidConversionChange(1.0)}}>Oz</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('tbsp'); liquidConversionChange(0.5)}}>Tbsp</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('mL'); liquidConversionChange(0.033814)}}>mL</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLiquidType('tsp'); liquidConversionChange(0.166667)}}>Tsp</li>\n\t\t\t  \t</ul>\n\t  \t\t</div>\n\t  \t\t<button type=\"button\" class=\"btn formButton\" onClick={() => {checkFields(unitConversion, itemType, base); clearLiquidFields()}}>Add</button>\n\t\t</div>\n\t)\n}\n\nexport default Liquid;","import React from 'react'\n\nconst clearSolidFields = () => {\n\tdocument.getElementById('name').value = ''\n    document.getElementById('price').value = ''\n    document.getElementById('quantity').value = ''\n}\n\nconst Solid = ({ setSolidType, solidType, solidConversionChange, itemList, addToArray, itemType, unitConversion, base, checkFields }) => {\n\treturn (\n\t\t<div class=\"input-group mb-3 mv3 ml2\">\n  \t\t\t<input type=\"text\" class=\"form-control\" id='name' placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='price' placeholder=\"Price\" aria-label=\"Price\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='quantity'placeholder=\"Count\" aria-label=\"Quantity\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<button className=\"btn dropdown-toggle formButton\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t    \t\t{solidType}\n\t  \t\t</button>\n  \t\t\t<div className=\"dropdown-menu scrollable-menu down\">\n\t  \t\t\t<ul>\n\t\t  \t\t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Lb'); solidConversionChange(16.0)}}>Lb</li>\n\t\t    \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Oz'); solidConversionChange(1.0)}}>Oz</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('g'); solidConversionChange(0.035274)}}>g</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Kg'); solidConversionChange(35.274)}}>Kg</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setSolidType('Ton'); solidConversionChange(32000.0)}}>Ton</li>\n\t\t\t  \t</ul>\n\t  \t\t</div>\n  \t\t\t<button type=\"button\" class=\"btn formButton\" onClick={() => {checkFields(unitConversion, itemType, base); clearSolidFields()}}>Add</button>\n\t\t</div>\n\t)\n}\n\nexport default Solid;","import React from 'react';\n\nconst clearLengthFields = () => {\n\tdocument.getElementById('name').value = ''\n    document.getElementById('price').value = ''\n    document.getElementById('quantity').value = ''\n}\n\nconst Liquid = ({ setLengthType, lengthType, lengthConversionChange, itemList, addToArray, itemType, unitConversion, base, checkFields }) => {\n\treturn (\n\t\t<div class=\"input-group mb-3 mv3 ml2\">\n  \t\t\t<input type=\"text\" class=\"form-control\" id='name' placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='price' placeholder=\"Price\" aria-label=\"Price\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<input type=\"text\" class=\"form-control\" id='quantity'placeholder=\"Count\" aria-label=\"Quantity\" aria-describedby=\"basic-addon1\" />\n  \t\t\t<button className=\"btn dropdown-toggle formButton\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t    \t\t{lengthType}\n\t  \t\t</button>\n  \t\t\t<div className=\"dropdown-menu scrollable-menu down\">\n\t  \t\t\t<ul>\n\t\t  \t\t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('Km'); lengthConversionChange(1000000.0)}}>Km</li>\n\t\t    \t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('M'); lengthConversionChange(1000.0)}}>M</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('Cm'); lengthConversionChange(10.0)}}>Cm</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('mm'); lengthConversionChange(1.0)}}>mm</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('Mile'); lengthConversionChange(1609344.0)}}>Mile</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('Yard'); lengthConversionChange(914.4)}}>Yard</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('Feet'); lengthConversionChange(304.8)}}>Feet</li>\n\t\t\t  \t\t<li className=\"dropdown-item\" onClick={() => {setLengthType('Inch'); lengthConversionChange(25.4)}}>Inch</li>\n\t\t\t  \t</ul>\n\t  \t\t</div>\n  \t\t\t<button type=\"button\" class=\"btn formButton\" onClick={() => {checkFields(unitConversion, itemType, base); clearLengthFields()}}>Add</button>\n\t\t</div>\n\t)\n}\n\nexport default Liquid;","import React from 'react'\n\nconst Item = ({position, name, unitPrice, unitBase, deleteItem}) => {\n\tlet nameCopy = name;\n\tif (nameCopy.length > 5) {\n\t\tnameCopy = nameCopy.substring(0,5) + '..'\n\t}\n\tlet unitPriceCopy = unitPrice;\n\tif (unitPriceCopy > 9) {\n\t\tunitPriceCopy = unitPriceCopy.toFixed(3);\n\t} else {\n\t\tunitPriceCopy = unitPriceCopy.toFixed(4);\n\t}\n\treturn (\n\t\t<div className='ml4 item'>\n\t\t\t<div><h4>{`${position+1}.`}</h4></div> \n\t\t\t<div><h4>{`${nameCopy}`}</h4></div>  \n\t\t\t<div><h4>{`$${unitPriceCopy}\\/${unitBase}`}</h4></div>  \n\t\t\t<div><button type=\"button\" class=\"btn btn-sm button\" onClick={() => deleteItem(position)}>-</button></div>\n\t\t</div>\n\t)\n}\n\nexport default Item;","import React from 'react'\nimport Item from '../Item/Item'\n\nconst ItemList = ({ itemList, deleteItem }) => {\n\treturn (\n\t\t<div className='itemList'>\n\t\t\t{itemList.map((item, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Item \n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tposition={i}\n\t\t\t\t\t\tname={itemList[i].name}\n\t\t\t\t\t\tunitPrice={itemList[i].unitPrice}\n\t\t\t\t\t\tunitBase={itemList[i].base}\n\t\t\t\t\t\tdeleteItem={deleteItem}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default ItemList;","import React from 'react';\n\nconst InvalidInput = ({ invalidInput, hideAlert }) => {\n  if (!invalidInput) {\n  \treturn (\n  \t\t<div>\n        <div id='alert' class=\"alert alert-success alert-dismissible\">\n          {/*<button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>*/}\n          <button type=\"button\" class=\"close\" onClick={() => hideAlert()}>&times;</button>\n          <strong>Please correctly fill out all required sections.</strong> \n        </div>\n      </div>\n  \t)\n  }\n}\n\nexport default InvalidInput;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setItemTypeSelected, setLiquidType, setLiquidConversion, setSolidType, setSolidConversion, setLengthType, setLengthConversion } from './actions';\nimport Header from './components/Header/Header';\nimport ItemType from './components/ItemType/ItemType';\nimport Unit from './components/Unit/Unit';\nimport Liquid from './components/Liquid/Liquid';\nimport Solid from './components/Solid/Solid';\nimport Length from './components/Length/Length';\nimport ItemList from './components/ItemList/ItemList';\nimport InvalidInput from './components/InvalidInput/InvalidInput';\nimport './App.css';\n\nconst mapStateToProps = state => {\n  return {\n    itemType: state.updateItemType.itemType,\n    liquidType: state.updateLiquidType.liquidType,\n    numOz: state.updateLiquidConversion.numOz,\n    solidType: state.updateSolidType.solidType,\n    numGrams: state.updateSolidConversion.numGrams,\n    lengthType: state.updateLengthType.lengthType,\n    numMm: state.updateLengthConversion.numMm,\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    itemTypeChange: (itemType) => dispatch(setItemTypeSelected(itemType)),\n    liquidTypeChange: (liquidType) => dispatch(setLiquidType(liquidType)),\n    liquidConversionChange: (liquidConversion) => dispatch(setLiquidConversion(liquidConversion)),\n    solidTypeChange: (solidType) => dispatch(setSolidType(solidType)),\n    solidConversionChange: (solidConversion) => dispatch(setSolidConversion(solidConversion)),\n    lengthTypeChange: (lengthType) => dispatch(setLengthType(lengthType)),\n    lengthConversionChange: (lengthConversion) => dispatch(setLengthConversion(lengthConversion)),\n  }\n}\n\nconst overFlowStyle = {\n  overflow: 'visible'\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itemList: [],\n      validInput: true\n    }\n  }\n\n  async addToArray(unitConversion, itemType, base) {\n    const priceReal = parseFloat(document.getElementById('price').value)\n    const quantityReal = parseFloat(document.getElementById('quantity').value)\n    const item = {\n      name: document.getElementById('name').value,\n      price: priceReal,\n      quantity: quantityReal,\n      unitConversion: unitConversion,\n      itemType: itemType,\n      unitPrice: priceReal / (quantityReal * unitConversion),\n      base: base\n    }\n    const itemListCopy = [... this.state.itemList]\n    itemListCopy.push(item);\n    itemListCopy.sort((a,b) => (a.unitPrice > b.unitPrice) ? 1 : -1)\n    await this.setState({itemList: itemListCopy})\n  }\n\n  clearFields() {\n    document.getElementById('name').innerHTML = ''\n    document.getElementById('price').innerHTML = ''\n    document.getElementById('quantity').innerHTML = ''\n  }\n\n  async clearList() {\n    const itemListCopy = []\n    await this.setState({itemList: itemListCopy})\n  }\n\n  async deleteItem(position) {\n    const itemListCopy = [... this.state.itemList]\n    itemListCopy.splice(position, 1)\n    await this.setState({itemList: itemListCopy})\n\n  }\n\n   async checkFields(unitConversion, itemType, base) {\n    let name = document.getElementById('name')\n    let price = document.getElementById('price')\n    let count = document.getElementById('quantity')\n    let nameVal, priceVal, countVal = ''\n    console.log('here')\n    if (name && price && count) { // checks to see if they're loaded\n      nameVal = name.value\n      priceVal = price.value\n      countVal = count.value\n      if (nameVal !== '' && priceVal !== '' && countVal !== '' && !isNaN(priceVal) && !isNaN(countVal)) { // checks to see if they're empty or not\n        if (this.props.liquidType !== 'Unit' && this.props.itemType === 'liquid' ||\n            this.props.solidType !== 'Unit' && this.props.itemType === 'solid' ||\n            this.props.lengthType !== 'Unit' && this.props.itemType === 'length' ) {\n          this.addToArray(unitConversion, itemType, base)\n          document.getElementById('alert').style.display = 'none'\n        } else if (this.props.itemType === 'unit') {\n          this.addToArray(unitConversion, itemType, base)\n          document.getElementById('alert').style.display = 'none'\n        }\n      } else {\n        console.log('invalid input')\n        await this.setState({ validInput: false })\n        document.getElementById('alert').style.display = 'block'\n      }\n    }\n  }\n  \n  hideAlert() {\n    document.getElementById('alert').style.display = 'none'\n  }\n\n  render() {\n    const { itemType, \n            itemTypeChange, \n            liquidTypeChange, \n            liquidType, \n            liquidConversionChange, \n            numOz,\n            solidTypeChange,\n            solidType,\n            solidConversionChange,\n            numGrams,\n            lengthTypeChange,\n            lengthType,\n            lengthConversionChange,\n            numMm,\n          } = this.props;\n    let inputForm = <Unit \n                      itemList={this.state.itemList} \n                      addToArray={this.addToArray.bind(this)} \n                      itemType={itemType} \n                      unitConversion={1}\n                      base={'unit'}\n                      checkFields={this.checkFields.bind(this)}\n                      />\n    if (itemType === 'liquid') {\n      inputForm = <Liquid \n                          setLiquidType={liquidTypeChange} \n                          liquidType={liquidType} \n                          liquidConversionChange={liquidConversionChange} \n                          itemList={this.state.itemList}\n                          addToArray={this.addToArray.bind(this)}\n                          itemType={itemType}\n                          unitConversion={numOz}\n                          base={'oz'}\n                          checkFields={this.checkFields.bind(this)}\n                  />\n    } else if (itemType === 'solid') {\n      inputForm = <Solid \n                    setSolidType={solidTypeChange} \n                    solidType={solidType} \n                    solidConversionChange={solidConversionChange} \n                    itemList={this.state.itemList}\n                    addToArray={this.addToArray.bind(this)}\n                    itemType={itemType}\n                    unitConversion={numGrams}\n                    base={'oz'}\n                    checkFields={this.checkFields.bind(this)}\n                  />\n    } else if (itemType === 'length') {\n      inputForm = <Length\n                    setLengthType={lengthTypeChange} \n                    lengthType={lengthType} \n                    lengthConversionChange={lengthConversionChange} \n                    itemList={this.state.itemList}\n                    addToArray={this.addToArray.bind(this)}\n                    itemType={itemType}\n                    unitConversion={numMm}\n                    base={'mm'}\n                    checkFields={this.checkFields.bind(this)}\n                  />\n    }\n    if (this.state.validInput) {\n        return (\n          <div>\n            <Header />\n            <ItemType itemTypeChange={itemTypeChange} itemType={itemType} clearFields={this.clearFields} clearList={this.clearList.bind(this)}/>\n            {inputForm}\n            <ItemList itemList={this.state.itemList} deleteItem={this.deleteItem.bind(this)}/> \n          </div>\n      );\n      } else {\n        return(\n          <div>\n            <Header />\n            <ItemType itemTypeChange={itemTypeChange} itemType={itemType} clearFields={this.clearFields} clearList={this.clearList.bind(this)}/>\n            {inputForm}\n            <InvalidInput validInput={this.state.validInput} hideAlert={this.hideAlert}/>\n            <ItemList itemList={this.state.itemList} deleteItem={this.deleteItem.bind(this)}/> \n          </div>\n        )\n      }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport { \n\tCHANGE_ITEM_TYPE, \n\tCHANGE_LIQUID_UNIT,\n\tCHANGE_LIQUID_CONVERSION,\n\tCHANGE_SOLID_UNIT,\n\tCHANGE_SOLID_CONVERSION,\n\tCHANGE_LENGTH_UNIT,\n\tCHANGE_LENGTH_CONVERSION,\n} from './constants'\n\n\n\nexport const setItemTypeSelected = (itemType) => {\n\treturn {\n\t\ttype: CHANGE_ITEM_TYPE,\n\t\tpayload: itemType\n\t}\n}\n\nexport const setLiquidType = (liquidType) => {\n\treturn {\n\t\ttype: CHANGE_LIQUID_UNIT,\n\t\tpayload: liquidType\n\t}\n}\n\nexport const setLiquidConversion = (liquidConversion) => {\n\treturn {\n\t\ttype: CHANGE_LIQUID_CONVERSION,\n\t\tpayload: liquidConversion\n\t}\n}\n\nexport const setSolidType = (solidType) => {\n\treturn {\n\t\ttype: CHANGE_SOLID_UNIT,\n\t\tpayload: solidType\n\t}\n}\n\nexport const setSolidConversion = (solidConversion) => {\n\treturn {\n\t\ttype: CHANGE_SOLID_CONVERSION,\n\t\tpayload: solidConversion\n\t}\n}\n\nexport const setLengthType = (lengthType) => {\n\treturn {\n\t\ttype: CHANGE_LENGTH_UNIT,\n\t\tpayload: lengthType\n\t}\n}\n\nexport const setLengthConversion = (lengthConversion) => {\n\treturn {\n\t\ttype: CHANGE_LENGTH_CONVERSION,\n\t\tpayload: lengthConversion\n\t}\n}\n\n\n","export const CHANGE_ITEM_TYPE = 'CHANGE_ITEM_TYPE'\nexport const CHANGE_LIQUID_UNIT = 'CHANGE_LIQUID_UNIT'\nexport const CHANGE_LIQUID_CONVERSION = 'CHANGE_LIQUID_CONVERSION'\nexport const CHANGE_SOLID_UNIT = 'CHANGE_SOLID_UNIT'\nexport const CHANGE_SOLID_CONVERSION = 'CHANGE_SOLID_CONVERSION'\nexport const CHANGE_LENGTH_UNIT = 'CHANGE_LENGTH_UNIT'\nexport const CHANGE_LENGTH_CONVERSION = 'CHANGE_LENGTH_CONVERSION'","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { updateItemType, updateLiquidType, updateLiquidConversion, updateSolidType, updateSolidConversion, updateLengthType, updateLengthConversion } from './reducers';\nimport './index.css';\nimport 'tachyons'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ updateItemType, updateLiquidType, updateLiquidConversion, updateSolidType, updateSolidConversion, updateLengthType, updateLengthConversion});\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <Provider store={store}>\n\t    <App />\n\t  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}